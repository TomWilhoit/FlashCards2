// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match the snapshot with all data passed in correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header />,
        ">",
        <img
          alt="logo"
          className="App-logo"
          src="logo.svg"
        />,
        <p>
          Edit 
          <code>
            src/App.js
          </code>
           and save to reload.
        </p>,
        <a
          className="App-link"
          href="https://reactjs.org"
          rel="noopener noreferrer"
          target="_blank"
        >
          Learn React
        </a>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      ">",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "logo",
          "className": "App-logo",
          "src": "logo.svg",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Edit ",
            <code>
              src/App.js
            </code>,
            " and save to reload.",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Edit ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "src/App.js",
            },
            "ref": null,
            "rendered": "src/App.js",
            "type": "code",
          },
          " and save to reload.",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Learn React",
          "className": "App-link",
          "href": "https://reactjs.org",
          "rel": "noopener noreferrer",
          "target": "_blank",
        },
        "ref": null,
        "rendered": "Learn React",
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header />,
          ">",
          <img
            alt="logo"
            className="App-logo"
            src="logo.svg"
          />,
          <p>
            Edit 
            <code>
              src/App.js
            </code>
             and save to reload.
          </p>,
          <a
            className="App-link"
            href="https://reactjs.org"
            rel="noopener noreferrer"
            target="_blank"
          >
            Learn React
          </a>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        ">",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "logo",
            "className": "App-logo",
            "src": "logo.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Edit ",
              <code>
                src/App.js
              </code>,
              " and save to reload.",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Edit ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "src/App.js",
              },
              "ref": null,
              "rendered": "src/App.js",
              "type": "code",
            },
            " and save to reload.",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Learn React",
            "className": "App-link",
            "href": "https://reactjs.org",
            "rel": "noopener noreferrer",
            "target": "_blank",
          },
          "ref": null,
          "rendered": "Learn React",
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
